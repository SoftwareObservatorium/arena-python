<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7a04b348-b7e1-4004-bf43-c3452fe416f3" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notebooks/base64_example.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/notebooks/base64_example.ipynb" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Setup Script" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2t1rSMItH59tRZAv21INtHAlwq7" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python tests.Python tests for arena_test.test_deque.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_list.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_queue.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_queue_code_expression.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_queue_parameterized_sheet.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_base64_external.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_base64_external_classes.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_base64_external_classes_code_coverage.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_base64_external_code_coverage.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_base64_external_functions.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_list.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_list_builtin.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for arena_test.test_srm_list_builtin_nojsonl.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for artifacts_test.test_from_local_directory.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for classes_test.test_load_by_name.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for classes_test.test_module.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for debugging_test.test.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for gai_test.test_prompt_code.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for gai_test.test_prompt_code_ollama.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for gai_test.test_prompt_code_openai.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for lqlparser_test.test_parse.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for mutants_test.test_create_mutants.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for parser_test.test_is_cell_reference.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for parser_test.test_parse.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for ssn_utilities_test.test_bla.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for ssn_utilities_test.test_generate_rows_from_dict.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for ssn_utilities_test.test_to_from.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for ssnparser_test.test_parse.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for ssnparser_test.test_parse_dataframe.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests for ssnparser_test.test_parse_dataframe_collections.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in arena_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in artifacts_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in classes_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in debugging_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in lqlparser_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in mutants_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in parser_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in ssnparser_test.py.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.Python tests in tests.executor&quot;: &quot;Run&quot;,
    &quot;Python tests.pytest for tests.arena_test.test_srm_list_builtin.executor&quot;: &quot;Run&quot;,
    &quot;Python.arena.executor&quot;: &quot;Run&quot;,
    &quot;Python.classloader.executor&quot;: &quot;Run&quot;,
    &quot;Python.load.executor&quot;: &quot;Run&quot;,
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;Python.pan.executor&quot;: &quot;Run&quot;,
    &quot;Python.parser.executor&quot;: &quot;Run&quot;,
    &quot;Python.ssn_utilities.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/marcus/PycharmProjects/arena-python/tests&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$/code-samples" />
      <recent name="$PROJECT_DIR$/arena/engine" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/arena" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$/arena/tasks" />
      <recent name="$PROJECT_DIR$/arena/" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for arena_test.test_srm_list_builtin_nojsonl">
    <configuration name="Python tests for arena_test.test_srm_base64_external_classes" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="arena-python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;arena_test.test_srm_base64_external_classes&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for arena_test.test_srm_list_builtin_nojsonl" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="arena-python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;arena_test.test_srm_list_builtin_nojsonl&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for gai_test.test_prompt_code" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="arena-python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;gai_test.test_prompt_code&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for ssnparser_test.test_parse_dataframe_collections" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="arena-python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;ssnparser_test.test_parse_dataframe_collections&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in tests" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="arena-python" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/tests&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for arena_test.test_srm_list_builtin_nojsonl" />
        <item itemvalue="Python tests.Python tests in tests" />
        <item itemvalue="Python tests.Python tests for ssnparser_test.test_parse_dataframe_collections" />
        <item itemvalue="Python tests.Python tests for arena_test.test_srm_base64_external_classes" />
        <item itemvalue="Python tests.Python tests for gai_test.test_prompt_code" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-fc1d50d2d915-aa17d162503b-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-243.24978.54" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7a04b348-b7e1-4004-bf43-c3452fe416f3" name="Changes" comment="" />
      <created>1739530420240</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1739530420240</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/arena/engine/adaptation.py</url>
          <line>35</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/arena/engine/adaptation.py</url>
          <line>36</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/arena/engine/adaptation.py</url>
          <line>38</line>
          <option name="timeStamp" value="17" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>